apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.0.1'
        classpath 'io.fabric.tools:gradle:1.25.1'
    }
}

repositories {
    maven { url 'https://maven.google.com/' }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}


configurations {
    ktlint
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "pl.jurassic.roger"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode Integer.parseInt(version_code)
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(ROGER_RELEASE_KESTORE_PATH)
            keyAlias ROGER_RELEASE_KEYSTORE_ALIAS
            keyPassword ROGER_RELEASE_KEYSTORE_PASSWORD
            storePassword ROGER_RELEASE_KEYSTORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    flavorDimensions "mode"

    productFlavors {
        develop {
            dimension "mode"
            applicationIdSuffix ".develop"
            versionNameSuffix "-develop"
            resValue 'string', 'app_name', 'Roger-develop'
        }
        production {
            dimension "mode"
            resValue 'string', 'app_name', 'Roger'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main.res.srcDirs += [
                'src/main/res/layouts',
                'src/main/res/layouts/activity',
                'src/main/res/layouts/fragment',
                'src/main/res/layouts/view',
                'src/main/res/drawables/selector',
                'src/main/res/drawables/shape',
                'src/main/res/drawables/icon'
        ]
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Espresso
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //JUnit
    testImplementation "junit:junit:4.12"
    //Mockito
    testImplementation "org.mockito:mockito-core:2.15.0"
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //Ktlint
    ktlint "com.github.shyiko:ktlint:0.22.0"
    //Support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:support-vector-drawable:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:support-annotations:$support_version"
    implementation "com.android.support.constraint:constraint-layout:1.1.1"
    //Room
    implementation "android.arch.persistence.room:runtime:1.1.0"
    implementation "android.arch.persistence.room:rxjava2:1.1.0"
    kapt "android.arch.persistence.room:compiler:1.1.0"
    //Firebase
    implementation 'com.google.firebase:firebase-core:16.0.0'
    implementation 'com.google.firebase:firebase-crash:16.0.0'
    //Dagger
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    //RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"
    implementation "io.reactivex.rxjava2:rxjava:2.1.14"
    //Timber
    implementation "com.jakewharton.timber:timber:4.5.1"
    //Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.5.4"
    //JodaTime
    implementation "net.danlew:android.joda:2.9.9.3"
    testImplementation "joda-time:joda-time:2.9.9"
    //EventBus
    implementation "org.greenrobot:eventbus:3.1.1"
    //SmartTabLayout
    implementation 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    //MPCharts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    //Fabric
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.3'
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

apply plugin: 'com.google.gms.google-services'
